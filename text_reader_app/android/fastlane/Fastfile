default_platform(:android)

platform :android do
  desc "Build and deploy to Google Play Internal Testing"
  lane :internal do
    # Ensure clean build
    gradle(
      task: "clean"
    )
    
    # Build the app bundle
    gradle(
      task: "bundle",
      build_type: "Release",
      properties: {
        "android.injected.signing.store.file" => ENV["KEYSTORE_FILE"],
        "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"]
      }
    )
    
    # Upload to internal testing track
    upload_to_play_store(
      track: "internal",
      release_status: "draft",
      aab: "../build/app/outputs/bundle/release/app-release.aab",
      json_key_data: ENV["PLAY_STORE_JSON_KEY"],
      skip_upload_metadata: false,
      skip_upload_images: false,
      skip_upload_screenshots: false
    )
    
    slack(
      message: "Successfully deployed to Google Play Internal Testing!",
      success: true
    ) if ENV["SLACK_URL"]
  end

  desc "Promote from internal to beta"
  lane :beta do
    upload_to_play_store(
      track: "internal",
      track_promote_to: "beta",
      json_key_data: ENV["PLAY_STORE_JSON_KEY"]
    )
    
    slack(
      message: "Successfully promoted to Beta!",
      success: true
    ) if ENV["SLACK_URL"]
  end

  desc "Deploy to production"
  lane :production do
    # Build production release
    gradle(
      task: "bundle",
      build_type: "Release",
      properties: {
        "android.injected.signing.store.file" => ENV["KEYSTORE_FILE"],
        "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"]
      }
    )
    
    # Upload to production with staged rollout
    upload_to_play_store(
      track: "production",
      release_status: "completed",
      rollout: "0.1", # 10% rollout initially
      aab: "../build/app/outputs/bundle/release/app-release.aab",
      json_key_data: ENV["PLAY_STORE_JSON_KEY"]
    )
    
    slack(
      message: "Successfully deployed to Production with 10% rollout!",
      success: true
    ) if ENV["SLACK_URL"]
  end

  desc "Build APK for local testing"
  lane :build_apk do
    gradle(
      task: "assemble",
      build_type: "Release"
    )
    
    puts "APK built successfully! Find it at: ../build/app/outputs/apk/release/"
  end

  desc "Run tests"
  lane :test do
    gradle(
      task: "test"
    )
  end

  error do |lane, exception|
    slack(
      message: "Error in lane #{lane}: #{exception.message}",
      success: false
    ) if ENV["SLACK_URL"]
  end
end