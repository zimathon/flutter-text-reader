name: Android Build and Deploy

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_track:
        description: 'Deployment track'
        required: true
        default: 'internal'
        type: choice
        options:
          - internal
          - beta
          - production

env:
  FLUTTER_VERSION: '3.19.0'
  JAVA_VERSION: '11'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
      
      - name: Get dependencies
        working-directory: ./text_reader_app
        run: flutter pub get
      
      - name: Run tests
        working-directory: ./text_reader_app
        run: flutter test
      
      - name: Check formatting
        working-directory: ./text_reader_app
        run: dart format --set-exit-if-changed .
      
      - name: Analyze code
        working-directory: ./text_reader_app
        run: flutter analyze

  build:
    name: Build APK and AAB
    needs: test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
      
      - name: Get dependencies
        working-directory: ./text_reader_app
        run: flutter pub get
      
      - name: Extract version
        id: version
        working-directory: ./text_reader_app
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Setup signing (if secrets are configured)
        if: env.KEYSTORE_BASE64 != ''
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        working-directory: ./text_reader_app
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > android/upload-keystore.jks
          echo "MYAPP_UPLOAD_STORE_FILE=../upload-keystore.jks" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=$KEYSTORE_PASSWORD" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=$KEY_ALIAS" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=$KEY_PASSWORD" >> android/gradle.properties
      
      - name: Build APK
        working-directory: ./text_reader_app
        run: flutter build apk --release --split-per-abi
      
      - name: Build App Bundle
        working-directory: ./text_reader_app
        run: flutter build appbundle --release
      
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apk-release
          path: text_reader_app/build/app/outputs/flutter-apk/*.apk
      
      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: aab-release
          path: text_reader_app/build/app/outputs/bundle/release/*.aab

  deploy-internal:
    name: Deploy to Internal Testing
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4
      
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
          working-directory: ./text_reader_app/android
      
      - name: Download AAB
        uses: actions/download-artifact@v4
        with:
          name: aab-release
          path: text_reader_app/build/app/outputs/bundle/release/
      
      - name: Setup Google Play credentials
        env:
          PLAY_STORE_JSON_KEY: ${{ secrets.PLAY_STORE_JSON_KEY }}
        working-directory: ./text_reader_app/android
        run: |
          echo "$PLAY_STORE_JSON_KEY" > fastlane/play-store-key.json
      
      - name: Deploy to Internal Testing
        working-directory: ./text_reader_app/android
        run: bundle exec fastlane internal

  deploy-production:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment:
      name: production
    steps:
      - uses: actions/checkout@v4
      
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
          working-directory: ./text_reader_app/android
      
      - name: Download AAB
        uses: actions/download-artifact@v4
        with:
          name: aab-release
          path: text_reader_app/build/app/outputs/bundle/release/
      
      - name: Setup Google Play credentials
        env:
          PLAY_STORE_JSON_KEY: ${{ secrets.PLAY_STORE_JSON_KEY }}
        working-directory: ./text_reader_app/android
        run: |
          echo "$PLAY_STORE_JSON_KEY" > fastlane/play-store-key.json
      
      - name: Deploy to Production
        working-directory: ./text_reader_app/android
        run: bundle exec fastlane production

  create-release:
    name: Create GitHub Release
    needs: [build, deploy-production]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      
      - name: Download APK artifacts
        uses: actions/download-artifact@v4
        with:
          name: apk-release
          path: apks/
      
      - name: Download AAB artifact
        uses: actions/download-artifact@v4
        with:
          name: aab-release
          path: aab/
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            apks/*.apk
            aab/*.aab
          generate_release_notes: true
          body: |
            ## VibeVoice Text Reader ${{ needs.build.outputs.version }}
            
            ### Downloads
            - **Google Play Store**: Available on Internal Testing/Production track
            - **Direct APK**: Download from assets below
            
            ### Installation
            1. Enable "Install from Unknown Sources" in Android settings
            2. Download the appropriate APK for your device architecture
            3. Open the downloaded file to install
          draft: false
          prerelease: false